#only bigger than 2 is a group
d<-subset(d, pop_size>2)
#remove leaky data
d<- subset(d, t_start < 1592257586)
#my scaling function
my_scale<-function(x){as.numeric(scale(x))}
#names of vectors
names(d)
#scale use variables
d$hhi_scaled<-my_scale(1-d$hhi)
d$hhi_squared_scaled<-my_scale((1-d$hhi)^2)
d$random_hhi_scaled<-my_scale(1-d$random_hhi)
d$random_hhi_squared_scaled<-my_scale((1-d$random_hhi)^2)
d$pop_size_scaled<-my_scale(d$pop_size)
d$pop_size_squared_scaled<-my_scale(d$pop_size^2)
d$rep_size_scaled<-my_scale(d$rep_size)
d$max_expertise_scaled<-my_scale(d$max_expertise)
d$mean_expertise_scaled<-my_scale(d$mean_expertise)
d$smallWorldness_scaled<-my_scale(d$smallWorldness)
d$clustering_scaled<-my_scale(d$clustering_coefficient)
d$n_interactions_scaled<-my_scale(d$n_interactions)
#look at everything
names(d)
mjob1<-lmer(new_techs~poly(hhi_scaled,2)+
pop_size_scaled+rep_size_scaled+
(1|family), data=d)
summary(mjob1)
#Mean HHI
mjob1<-lmer(new_techs~hhi_scaled+hhi_squared_scaled+
pop_size_scaled+rep_size_scaled+
(1|family), data=d)
summary(mjob1)
#Random HHI
mjob2<-lmer(new_techs~hhi_scaled+hhi_squared_scaled+
pop_size_scaled+rep_size_scaled+
(1|family), data=d)
summary(mjob2)
#Both have inverse u-shape
anova(mjob1, mjob2)
#Mean HHI
mjob1<-lmer(new_techs~hhi_scaled+hhi_squared_scaled+
pop_size_scaled+rep_size_scaled+
(1|family), data=d)
summary(mjob1)
#Random HHI
mjob2<-lmer(new_techs~poly(random_hhi_scaled,2)+
pop_size_scaled+rep_size_scaled+
(1|family), data=d)
summary(mjob2)
#Both have inverse u-shape
anova(mjob1, mjob2)
names(d)
#Random HHI
mjob2<-lmer(new_techs~scale(random_hhi_scaled^2)+scale(random_hhi_scaled)+
pop_size_scaled+rep_size_scaled+
(1|family), data=d)
summary(mjob2)
#Random HHI
mjob2<-lmer(new_techs~scale(c(random_hhi_scaled^2))+scale(random_hhi_scaled)+
pop_size_scaled+rep_size_scaled+
(1|family), data=d)
summary(mjob2)
anova(mjob1, mjob2)
#Final job regression
mjobfinal<-lmer(new_techs~hhi_scaled+hhi_squared_scaled+
pop_size_scaled+rep_size_scaled+
(1|family), data=d)
summary(mjobfinal)
mjobrandom<-lmer(new_techs~poly(hhi_scaled,2)+
pop_size_scaled+rep_size_scaled+
(hhi_scaled+pop_size_scaled+rep_size_scaled|family), data=d)
summary(mjobrandom)
#does this survive when adding random effect?
mjobrandom<-lmer(new_techs~hhi_scaled+hhi_squared_scaled+
pop_size_scaled+rep_size_scaled+
(hhi_scaled+pop_size_scaled+rep_size_scaled|family), data=d)
summary(mjobrandom)
#yes
BIC(mjobrandom)
rm(list=ls())
library(readr)
library(plyr)
library(lmerTest)
d<-read_csv("/home/ericschulz/Desktop/contexteffects/deliveroo.csv")
nrow(d)
names(d)
d$USER_ID[1]
length(unique(d$RESTAURANT_CUISINE_TYPE))
head(d)
length(unique(d$USER_ID))
#house keeping
rm(list=ls())
#required packages
packages <- c('lmerTest', 'plyr', 'performance', 'readr', 'ggplot2', 'xtable')
#load them
lapply(packages, library, character.only = TRUE)
#load regression data
d<-read_csv("/home/ericschulz/Desktop/contexteffects/deliveroo.csv")
head(d)
install.packages('nmf')
install.packages('NMF')
install.packages('NMF', dependencies = TRUE)
#house keeping
rm(list=ls())
#required packages
packages <- c('lmerTest', 'plyr', 'performance', 'readr', 'ggplot2', 'xtable')
#load them
lapply(packages, library, character.only = TRUE)
#load regression data
d<-read_csv("/home/ericschulz/Desktop/contexteffects/deliveroo.csv")
install.packages('topicmodels')
install.packages('topicmodels')
install.packages('topicmodels')
library('topicmodels')
head(d)
install.packages('NMF')
install.packages('Biobase')
library(topicmodels)
library(tm)
library(topicmodels)
head(d)
unique(d$RESTAURANT_CUISINE_TYPE)
table(d$RESTAURANT_CUISINE_TYPE)
tb<-table(d$RESTAURANT_CUISINE_TYPE)
tb
names(tb)
as.numeric(tb)
data.frame(names(tb), count=as.numeric(tb))
dr<-data.frame(names(tb), count=as.numeric(tb))
dr<-data.frame(cuisine=names(tb), count=as.numeric(tb))
dr<-dr[order(dr$count)]
tb<-table(d$RESTAURANT_CUISINE_TYPE)
dr<-data.frame(cuisine=names(tb), count=as.numeric(tb))
dr<-dr[order(dr$count)]
dr<-dr[order(dr$count),]
dr
dr<-dr[order(-dr$count),]
dr
dr$num<-seq_along(dr$cuisine)
dr
dr<-dr[1:150,]
head(dr)
dr$cuisine
paste(dr$cuisine)
matrix(0, nrow=150, ncol=length(unique(d$USER_ID)))
m<-matrix(0, nrow=150, ncol=length(unique(d$USER_ID)))
nrow(m)
ncol(m)
m<-matrix(rep(0, 150*length(unique(d$USER_ID))), nrow=150, ncol=length(unique(d$USER_ID)))
m
m[1,1]
m[1,2]
m<-matrix(rep(0, nrow=150, ncol=length(unique(d$USER_ID)))
m<-matrix(0, nrow=150, ncol=length(unique(d$USER_ID)))
d$USER_ID
ave(d$X1, d$USER_ID, FUN = seq_along())
ave(d$X1, d$USER_ID, FUN = seq_along)
d$n<-ave(d$X1, d$USER_ID, FUN = length)
d$n
d<-subset(d, n>=10)
ength(unique(d$USER_ID))
length(unique(d$USER_ID))
#house keeping
rm(list=ls())
#required packages
packages <- c('lmerTest', 'plyr', 'performance', 'readr', 'ggplot2', 'xtable')
#load them
lapply(packages, library, character.only = TRUE)
#load regression data
d<-read_csv("/home/ericschulz/Desktop/contexteffects/deliveroo.csv")
d$n<-ave(d$X1, d$USER_ID, FUN = length)
d<-subset(d, n>=10)
library(tm)
library(topicmodels)
tb<-table(d$RESTAURANT_CUISINE_TYPE)
dr<-data.frame(cuisine=names(tb), count=as.numeric(tb))
dr<-dr[order(-dr$count),]
dr$num<-seq_along(dr$cuisine)
dr<-dr[1:150,]
m<-matrix(0, nrow=150, ncol=length(unique(d$USER_ID)))
m[10,10]
dim(m)
tb<-table(d$RESTAURANT_CUISINE_TYPE)
dr<-data.frame(cuisine=names(tb), count=as.numeric(tb))
dr<-dr[order(-dr$count),]
dr$num<-seq_along(dr$cuisine)
dr<-dr[1:100,]
m<-matrix(0, nrow=150, ncol=length(unique(d$USER_ID)))
row.names(m)<-paste(dr$cuisine)
m<-matrix(0, nrow=100, ncol=length(unique(d$USER_ID)))
row.names(m)<-paste(dr$cuisine)
rownames(m)<-paste(dr$cuisine)
colnames(m)<-paste(unique(d$USER_ID))
dim(m)
#house keeping
rm(list=ls())
#required packages
packages <- c('lmerTest', 'plyr', 'performance', 'readr', 'ggplot2', 'xtable')
#load them
lapply(packages, library, character.only = TRUE)
#load regression data
d<-read_csv("/home/ericschulz/Desktop/contexteffects/deliveroo.csv")
d$n<-ave(d$X1, d$USER_ID, FUN = length)
d<-subset(d, n>=20)
library(tm)
library(topicmodels)
tb<-table(d$RESTAURANT_CUISINE_TYPE)
dr<-data.frame(cuisine=names(tb), count=as.numeric(tb))
dr<-dr[order(-dr$count),]
dr$num<-seq_along(dr$cuisine)
dr<-dr[1:100,]
m<-matrix(0, nrow=100, ncol=length(unique(d$USER_ID)))
rownames(m)<-paste(dr$cuisine)
colnames(m)<-paste(unique(d$USER_ID))
dim(m)
duser<-susbet(d, USER_ID==unique(d$USER_ID)[i])
duser<-subset(d, USER_ID==unique(d$USER_ID)[i])
i=2
duser<-subset(d, USER_ID==unique(d$USER_ID)[i])
duser
library(stringr)
#house keeping
rm(list=ls())
#required packages
packages <- c('lmerTest', 'plyr', 'performance', 'readr', 'ggplot2', 'xtable')
#load them
lapply(packages, library, character.only = TRUE)
#load regression data
d<-read_csv("/home/ericschulz/Desktop/contexteffects/deliveroo.csv")
d$n<-ave(d$X1, d$USER_ID, FUN = length)
d<-subset(d, n>=20)
library(tm)
library(topicmodels)
library(stringr)
tb<-table(d$RESTAURANT_CUISINE_TYPE)
dr<-data.frame(cuisine=names(tb), count=as.numeric(tb))
dr<-dr[order(-dr$count),]
dr$num<-seq_along(dr$cuisine)
dr<-dr[1:100,]
m<-matrix(0, nrow=100, ncol=length(unique(d$USER_ID)))
rownames(m)<-paste(dr$cuisine)
colnames(m)<-paste(unique(d$USER_ID))
dim(m)
for (i in 1:length(unique(d$USER_ID))){
duser<-subset(d, USER_ID==unique(d$USER_ID)[i])
for (j in 1:100){
m[i,j]<-sum(str_count(d$RESTAURANT_CUISINE_TYPE, colnames(m)[j]))
}
}
i
for (i in 1:length(unique(d$USER_ID))){
duser<-subset(d, USER_ID==unique(d$USER_ID)[i])
for (j in 1:100){
m[i,j]<-sum(str_count(d$RESTAURANT_CUISINE_TYPE, colnames(m)[j]))
}
print(i/length(unique(d$USER_ID)))
}
data("AssociatedPress")
AssociatedPress
data("crude")
crude
data.frame(doc_id = c(1, 1, 2, 3, 4),
term = c("A", "C", "Z", "X", "G"),
freq = c(1, 5, 7, 10, 0))
document_term_matrix(x)
x<- data.frame(doc_id = c(1, 1, 2, 3, 4),
term = c("A", "C", "Z", "X", "G"),
freq = c(1, 5, 7, 10, 0))
document_term_matrix(x)
BiocManager::install("Biobase")
install.packages('NMF')
library(NMF)
x <- rmatrix(20,10)
x
# run default algorithm with rank 2
res <- nmf(x, 2)
res
data(esGolub)
esGolub
esGolub <- esGolub[1:200,]
esGolub
#house keeping
rm(list=ls())
#required packages
packages <- c('lmerTest', 'plyr', 'performance', 'readr', 'ggplot2', 'xtable')
#load them
lapply(packages, library, character.only = TRUE)
#load regression data
d<-read_csv("/home/ericschulz/Desktop/contexteffects/deliveroo.csv")
d$n<-ave(d$X1, d$USER_ID, FUN = length)
d<-subset(d, n>=20)
library(tm)
library(topicmodels)
library(stringr)
tb<-table(d$RESTAURANT_CUISINE_TYPE)
dr<-data.frame(cuisine=names(tb), count=as.numeric(tb))
dr<-dr[order(-dr$count),]
dr$num<-seq_along(dr$cuisine)
dr<-dr[1:100,]
m<-matrix(0, nrow=100, ncol=length(unique(d$USER_ID)))
rownames(m)<-paste(dr$cuisine)
colnames(m)<-paste(unique(d$USER_ID))
dim(m)
for (i in 1:length(unique(d$USER_ID))){
duser<-subset(d, USER_ID==unique(d$USER_ID)[i])
for (j in 1:100){
m[i,j]<-sum(str_count(d$RESTAURANT_CUISINE_TYPE, colnames(m)[j]))
}
print(i/length(unique(d$USER_ID)))
}
original<-c(0.18, 0.83, 0.20, 0.65, 0.14, 0.73, 0.92, 0.42, 0.92, 0.30, 0.22, 0.16, 0.69, 0.18, 0.70, 0.72, 0.17)
original<-c(0.18, 0.83, 0.20, 0.65, 0.14, 0.73, 0.92, 0.42, 0.92,
0.30, 0.22, 0.16, 0.69, 0.18, 0.70, 0.72, 0.17)
original
original<-c(0.18, 0.83, 0.20, 0.65, 0.14, 0.73, 0.92, 0.42, 0.92,
0.30, 0.22, 0.16, 0.69, 0.18, 0.70, 0.72, 0.17)
gpt3<-(0,1,1,1,0,1,1,1,1,0,0,0,1,0,0,0,1)
gpt3<-(0,1,1,1,0,1,1,1,1,0,0,0,1,0,0,0,1)
gpt3<-c(0,1,1,1,0,1,1,1,1,0,0,0,1,0,0,0,1)
cor(original, gpt3)
cor.test(original, gpt3)
plot(gpt3)
points(original)
plot(gpt3, pch=9)
plot(gpt3, pch=19)
plot(gpt3, pch=19, col='red')
points(original)
points(original, pch=12)
plot(gpt3, pch=19, col='red')
points(original, pch=11)
plot(gpt3, pch=19, col='red')
points(original, pch=2)
plot(gpt3, pch=19, col='red')
points(original, pch=3)
plot(gpt3, pch=19, col='red')
points(original, pch=9)
sum(gpt3==ifelse(original>0.5, 1, 0))
cor.test(original, gpt3)
sum(gpt3==ifelse(original>0.5, 1, 0))
Linda
data.frame(scenario=c('Linda', 'Cab', 'Hospital',
'Toma', 'Test', 'Wason',
'CRT1' 'CRT2', 'CRT3',
'Blicket', 'Intervention', 'Mature',
'Black cab', 'Mixed Wason','Typo CRT', 'Mature Blicket'),
group=c(rep(c('Decision Making', 'Information Search',
'Deliberation', 'Causal') each=3),rep('Adversarial', 4)),
human=c(1,0,1, 1,1,0, 1,1,1, 1,1,1, 0,0,0,0),
correct=c(0,1,0,1,0,1,0,0,0,1,1,1,0,0,0,0),
coh=c(1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0))
c(rep(c('Decision Making', 'Information Search',
'Deliberation', 'Causal') each=3),rep('Adversarial', 4))
data.frame(scenario=c('Linda', 'Cab', 'Hospital',
'Toma', 'Test', 'Wason',
'CRT1' 'CRT2', 'CRT3',
'Blicket', 'Intervention', 'Mature',
'Black cab', 'Mixed Wason','Typo CRT', 'Mature Blicket'),
group=c(rep(c('Decision Making', 'Information Search',
'Deliberation', 'Causal'), each=3),rep('Adversarial', 4)),
human=c(1,0,1, 1,1,0, 1,1,1, 1,1,1, 0,0,0,0),
correct=c(0,1,0,1,0,1,0,0,0,1,1,1,0,0,0,0),
coh=c(1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0))
scenario=c('Linda', 'Cab', 'Hospital',
'Toma', 'Test', 'Wason',
'CRT1' 'CRT2', 'CRT3',
'Blicket', 'Intervention', 'Mature',
'Black cab', 'Mixed Wason','Typo CRT', 'Mature Blicket'),
scenario=c('Linda', 'Cab', 'Hospital',
'Toma', 'Test', 'Wason',
'CRT1' 'CRT2', 'CRT3',
'Blicket', 'Intervention', 'Mature',
'Black cab', 'Mixed Wason','Typo CRT', 'Mature Blicket')
scenario=c('Linda', 'Cab', 'Hospital',
'Toma', 'Test', 'Wason',
'CRT1' 'CRT2', 'CRT3',
'Blicket', 'Intervention', 'Mature',
'Black cab', 'Mixed Wason','Typo CRT', 'Mature Blicket')
scenario=c('Linda', 'Cab', 'Hospital',
'Toma', 'Test', 'Wason',
'CRT1' 'CRT2', 'CRT3',
'Blicket', 'Intervention', 'Mature',
'Black cab', 'Mixed Wason','Typo CRT', 'Mature Blicket')
data.frame(scenario=c('Linda', 'Cab', 'Hospital',
'Toma', 'Test', 'Wason',
'CRT1' 'CRT2', 'CRT3',
'Blicket', 'Intervention', 'Mature',
'Black cab', 'Mixed Wason','Typo CRT', 'Mature Blicket'),
group=c(rep(c('Decision Making', 'Information Search',
'Deliberation', 'Causal'), each=3),rep('Adversarial', 4)),
human=c(1,0,1, 1,1,0, 1,1,1, 1,1,1, 0,0,0,0),
correct=c(0,1,0,1,0,1,0,0,0,1,1,1,0,0,0,0),
coh=c(1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0))
scenario=c('Linda', 'Cab', 'Hospital',
'Toma', 'Test', 'Wason',
'CRT1' 'CRT2', 'CRT3',
'Blicket', 'Intervention', 'Mature',
'Black cab', 'Mixed Wason','Typo CRT', 'Mature Blicket'),
data.frame(scenario=c('Linda', 'Cab', 'Hospital',
'Toma', 'Test', 'Wason',
'CRT1' 'CRT2', 'CRT3',
'Blicket', 'Intervention', 'Mature',
'Black cab', 'Mixed Wason','Typo CRT', 'Mature Blicket'),
group=c(rep(c('Decision Making', 'Information Search',
'Deliberation', 'Causal'), each=3),rep('Adversarial', 4)),
human=c(1,0,1, 1,1,0, 1,1,1, 1,1,1, 0,0,0,0),
correct=c(0,1,0,1,0,1,0,0,0,1,1,1,0,0,0,0),
coh=c(1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0))
data.frame(scenario=c('Linda', 'Cab', 'Hospital',
'Toma', 'Test', 'Wason',
'CRT1' 'CRT2', 'CRT3',
'Blicket', 'Intervention', 'Mature',
'Black cab', 'Mixed Wason','Typo CRT', 'Mature Blicket'),
group=c(rep(c('Decision Making', 'Information Search',
'Deliberation', 'Causal'), each=3),rep('Adversarial', 4)),
human=c(1,0,1, 1,1,0, 1,1,1, 1,1,1, 0,0,0,0),
correct=c(0,1,0,1,0,1,0,0,0,1,1,1,0,0,0,0),
coh=c(1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0))
data.frame(scenario=c('Linda', 'Cab', 'Hospital',
'Toma', 'Test', 'Wason',
'CRT1' 'CRT2', 'CRT3',
'Blicket', 'Intervention', 'Mature',
'Black cab', 'Mixed Wason','Typo CRT', 'Mature Blicket'),
group=c(rep(c('Decision Making', 'Information Search',
'Deliberation', 'Causal'), each=3),rep('Adversarial', 4)),
human=c(1,0,1,1,1,0,1,1,1,1,1,1,0,0,0,0),
correct=c(0,1,0,1,0,1,0,0,0,1,1,1,0,0,0,0),
coh=c(1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0))
data.frame(scenario=c('Linda', 'Cab', 'Hospital',
'Toma', 'Test', 'Wason',
'CRT1' 'CRT2', 'CRT3',
'Blicket', 'Intervention', 'Mature',
'Black cab', 'Mixed Wason','Typo CRT', 'Mature Blicket'),
group=c(rep(c('Decision Making', 'Information Search',
'Deliberation', 'Causal'), each=3),rep('Adversarial', 4)),
human=c(1,0,1,1,1,0,1,1,1,1,1,1,0,0,0,0),
correct=c(0,1,0,1,0,1,0,0,0,1,1,1,0,0,0,0),
coh=c(1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0))
c(1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0)
c(0,1,0,1,0,1,0,0,0,1,1,1,0,0,0,0)
c(1,0,1,1,1,0,1,1,1,1,1,1,0,0,0,0)
rep(c('Decision Making', 'Information Search',
'Deliberation', 'Causal'), each=3),rep('Adversarial', 4)
c(rep(c('Decision Making', 'Information Search',
'Deliberation', 'Causal'), each=3),rep('Adversarial', 4))
c('Linda', 'Cab', 'Hospital',
'Toma', 'Test', 'Wason',
'CRT1' 'CRT2', 'CRT3',
'Blicket', 'Intervention', 'Mature',
'Black cab', 'Mixed Wason','Typo CRT', 'Mature Blicket')
data.frame(scenario=c('Linda', 'Cab', 'Hospital',
'Toma', 'Test', 'Wason',
'CRT1', 'CRT2', 'CRT3',
'Blicket', 'Intervention', 'Mature',
'Black cab', 'Mixed Wason','Typo CRT', 'Mature Blicket'),
group=c(rep(c('Decision Making', 'Information Search',
'Deliberation', 'Causal'), each=3),rep('Adversarial', 4)),
human=c(1,0,1,1,1,0,1,1,1,1,1,1,0,0,0,0),
correct=c(0,1,0,1,0,1,0,0,0,1,1,1,0,0,0,0),
coh=c(1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0))
dp<-data.frame(scenario=c('Linda', 'Cab', 'Hospital',
'Toma', 'Test', 'Wason',
'CRT1', 'CRT2', 'CRT3',
'Blicket', 'Intervention', 'Mature',
'Black cab', 'Mixed Wason','Typo CRT', 'Mature Blicket'),
group=c(rep(c('Decision Making', 'Information Search',
'Deliberation', 'Causal'), each=3),rep('Adversarial', 4)),
human=c(1,0,1,1,1,0,1,1,1,1,1,1,0,0,0,0),
correct=c(0,1,0,1,0,1,0,0,0,1,1,1,0,0,0,0),
coh=c(1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0))
setwd('/home/ericschulz/Desktop/banditdata')
d<-read.csv('lindata.csv')
head(d)
d$X<-NULL
write.csv(d, "lindata.csv")
d<-read.csv('lindata.csv')
head(d)
#read in data
dlin<-read.csv('lindata.csv')
head(dlin)
#names of variables
names(dlin)
#summary
summary(dlin)
length(unique(d$id))
dlin$time<-NULL
write.csv(dlin, 'lindata.csv')
#read in data
dlin<-read.csv('lindata.csv')
#names of variables
names(dlin)
dlin$X.1<-dlin$X<-NULL
write.csv(dlin, 'lindata.csv')
#read in data
dlin<-read.csv('lindata.csv')
#names of variables
names(dlin)
#read in data
dlin<-read.csv('lindata.csv')
#names of variables
names(dlin)
#read in data
dlin<-read.csv('lindata.csv')
#names of variables
names(dlin)
#show head of the data
head(dlin)
#read in data
dlin<-read.csv('lindata.csv')
#names of variables
names(dlin)
#show head of the data
head(dlin)
